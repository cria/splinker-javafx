name: Compilar e Lançar spLinker para Windows, Linux e MacOS

on:
  push:
    branches:
      - master

jobs:
  test:
    name: "Testes automatizados do Maven"
    runs-on: ubuntu-latest
    env:
      CURRENT_DIR: ${{ github.workspace }}
      SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          architecture: x64
          lfs: true
          path: src

      - name: Testes automatizados
        run: mvn clean test

  build-on-windows:
    needs: test
    name: "Compilação para Windows"
    runs-on: windows-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          architecture: x64

      - name: Define versão
        run: |
          $version = Select-String -Path "pom.xml" -Pattern '<version>(.*?)</version>' | Select-Object -First 1
          $matches = [regex]::Match($version.ToString(), "<version>(.*?)</version>")
          $env:VERSION = $matches.Groups[1].Value
          echo "VERSION=$env:VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Define nome do JAR
        run: echo "SPLINKER_FILE=splinker-$env:VERSION.jar" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Exibe nome do JAR
        run: echo $env:SPLINKER_FILE

      - name: Maven - Instalar bibliotecas, compilar, executar testes automatizados e empacotar
        run: mvn package -DskipTests

      - name: Criar image jpackage
        run: jpackage --type app-image --name spLinker --input target/ --main-jar $env:SPLINKER_FILE

      - name: Criar pasta do yajsync
        run: mkdir spLinker\libs

      - name: Copiar yajsync
        run: cp libs\yajsync-app-0.9.0-SNAPSHOT-full.jar spLinker\libs

      - name: Copiar arquivo de configuração do Log4J/Sentry
        run: cp .\src\main\resources\log4j2.xml .\spLinker\

      - name: Empacotar para Windows (com upgrade support)
        run: >
          jpackage
          --name spLinker
          --app-image spLinker
          --type msi
          --dest dist\windows
          --app-version $env:VERSION
          --win-upgrade-uuid "e7f6cb61-254e-4e94-9184-0eaad5cb3e3b"
          --win-shortcut
          --win-dir-chooser
          --win-per-user-install

      - name: Renomear MSI com versão
        run: Rename-Item -Path "dist\windows\spLinker-*.msi" -NewName "spLinker-$env:VERSION.msi"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: splinker-windows
          path: dist/windows
          retention-days: 3

  build-on-linux:
    name: "Compilação para Linux (.deb e .rpm)"
    needs: test
    runs-on: ubuntu-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          architecture: x64

      - name: Define nome do JAR
        run: echo "SPLINKER_FILE="splinker-$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml | awk 'NR==1{print $1; exit}')".jar" >> $GITHUB_ENV

      - name: Maven - Instalar bibliotecas, compilar, executar testes automatizados e empacotar
        run: mvn package -DskipTests

      - name: Criar image jpackage
        run: jpackage --type app-image --name spLinker --input target/ --main-jar ${{ env.SPLINKER_FILE }}

      - name: Criar pasta do yajsync
        run: mkdir ./spLinker/libs

      - name: Copiar yajsync
        run: cp ./libs/yajsync-app-0.9.0-SNAPSHOT-full.jar ./spLinker/libs

      - name: Copiar arquivo de configuração do Log4J/Sentry
        run: cp ./src/main/resources/log4j2.xml ./spLinker

      - name: Empacotar para Deb
        run: jpackage --name spLinker --type deb --dest dist/linux/deb --linux-shortcut --app-image spLinker

      - name: Instalar empacotador RPM
        run: sudo apt-get install fakeroot

      - name: Empacotar para RPM
        run: jpackage --name spLinker --type rpm --dest dist/linux/rpm --linux-shortcut --app-image spLinker

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: splinker-linux
          path: dist/linux

  build-on-macos:
    name: "Compilação para MacOS (.pkg)"
    needs: test
    runs-on: macos-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          architecture: x64

      - name: Define nome do JAR
        run: echo "SPLINKER_FILE=splinker-$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml | head -1).jar" >> $GITHUB_ENV

      - name: Maven - Instalar bibliotecas, compilar, executar testes automatizados e empacotar
        run: mvn package -DskipTests

      - name: Criar imagem com jpackage
        run: jpackage --type app-image --name spLinker --input target/ --main-jar ${{ env.SPLINKER_FILE }}

      - name: Criar pasta do yajsync
        run: mkdir -p spLinker/libs

      - name: Copiar yajsync
        run: cp libs/yajsync-app-0.9.0-SNAPSHOT-full.jar spLinker/libs/

      - name: Copiar log4j2.xml
        run: cp src/main/resources/log4j2.xml spLinker/

      - name: Empacotar para MacOS (.pkg)
        run: |
          VERSION=$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml | head -1)
          jpackage \
            --name spLinker \
            --app-image spLinker \
            --type pkg \
            --dest dist/macos \
            --app-version "$VERSION"

      - name: Renomear arquivo .pkg com versão
        run: |
          VERSION=$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml | head -1)
          mv dist/macos/spLinker-*.pkg dist/macos/spLinker-$VERSION.pkg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: splinker-macos
          path: dist/macos
          retention-days: 3

  version-release:
    name: "Lançar nova versão"
    needs: [build-on-windows, build-on-linux, build-on-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de código
        uses: actions/checkout@v4

      - name: Download de artefatos Linux
        uses: actions/download-artifact@v4
        with:
          name: splinker-linux
          path: dist/linux

      - name: Download de artefatos Windows
        uses: actions/download-artifact@v4
        with:
          name: splinker-windows
          path: ./dist/windows

      - name: Download de artefatos MacOS
        uses: actions/download-artifact@v4
        with:
          name: splinker-macos
          path: ./dist/macos

      - name: Define versão
        id: version
        run: echo "SPLINKER_VERSION=$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml | awk 'NR==1
