name: Compilar e Lançar spLinker para Windows e Linux

on:
  push:
    branches:
      - master

jobs:
  test:
    name: "Testes automatizados do Maven"
    runs-on: ubuntu-latest
    env:
      CURRENT_DIR: ${{ github.workspace }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          architecture: x64
          lfs: true
          path: src

      - name: Testes automatizados
        run: mvn clean test

  build-on-windows:
    needs: test
    name: "Compilação para Windows"
    runs-on: windows-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          architecture: x64

      - name: Define versão
        run: |
          $env:VERSION = Select-String -Path "pom.xml" -Pattern '(?<=<version>)[^<]+' | Select-Object -First 1 -ExpandProperty Matches | ForEach-Object { $_.Value }
          echo "SPLINKER_VERSION=$env:VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "SPLINKER_FILE=splinker-$env:VERSION.jar" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Exibe nome do jar
        run: echo $env:SPLINKER_FILE

      - name: Maven - Compilar e empacotar (sem testes)
        run: mvn package -DskipTests

      - name: Criar imagem jpackage
        run: jpackage --type app-image --name spLinker --input target/ --main-jar $env:SPLINKER_FILE

      - name: Criar pasta do yajsync
        run: mkdir spLinker\libs

      - name: Copiar yajsync
        run: cp libs\yajsync-app-0.9.0-SNAPSHOT-full.jar spLinker\libs

      - name: Copiar config Log4J/Sentry
        run: cp .\src\main\resources\log4j2.xml .\spLinker\

      - name: Empacotar para Windows (.msi)
        run: jpackage --name spLinker --app-image spLinker --type msi --dest dist\windows --win-shortcut  --win-dir-chooser --win-per-user-install

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: splinker-windows
          path: dist/windows
          retention-days: 3

  build-on-linux:
    name: "Compilação para Linux (.deb e .rpm)"
    needs: test
    runs-on: ubuntu-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          architecture: x64

      - name: Define versão e nome do JAR
        run: |
          VERSION=$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml | awk 'NR==1{print $1; exit}')
          echo "SPLINKER_VERSION=$VERSION" >> $GITHUB_ENV
          echo "SPLINKER_FILE=splinker-$VERSION.jar" >> $GITHUB_ENV

      - name: Maven - Compilar e empacotar (sem testes)
        run: mvn package -DskipTests

      - name: Criar imagem jpackage
        run: jpackage --type app-image --name spLinker --input target/ --main-jar ${{ env.SPLINKER_FILE }}

      - name: Criar pasta do yajsync
        run: mkdir ./spLinker/libs

      - name: Copiar yajsync
        run: cp ./libs/yajsync-app-0.9.0-SNAPSHOT-full.jar ./spLinker/libs

      - name: Copiar config Log4J/Sentry
        run: cp ./src/main/resources/log4j2.xml ./spLinker

      - name: Empacotar para .deb
        run: jpackage --name spLinker --type deb --dest dist/linux/deb --linux-shortcut --app-image spLinker

      - name: Instalar empacotador RPM
        run: sudo apt-get install fakeroot

      - name: Empacotar para .rpm
        run: jpackage --name spLinker --type rpm --dest dist/linux/rpm --linux-shortcut --app-image spLinker

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: splinker-linux
          path: dist/linux

  version-release:
    name: "Lançar nova versão"
    needs: [build-on-windows, build-on-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Download artefatos Linux
        uses: actions/download-artifact@v4
        with:
          name: splinker-linux
          path: dist/linux

      - name: Download artefatos Windows
        uses: actions/download-artifact@v4
        with:
          name: splinker-windows
          path: dist/windows

      - name: Define versão
        run: echo "SPLINKER_VERSION=$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml | awk 'NR==1{print $1; exit}')" >> $GITHUB_ENV

      - name: Criar Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.SPLINKER_VERSION }}
          release_name: Release v${{ env.SPLINKER_VERSION }}
          body: "Release criado automaticamente pelo GitHub Actions."
          draft: false
          prerelease: false

      - name: Upload .rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/linux/rpm/spLinker-${{ env.SPLINKER_VERSION }}-1.x86_64.rpm
          asset_name: spLinker-${{ env.SPLINKER_VERSION }}-1.x86_64.rpm
          asset_content_type: application/x-rpm

      - name: Upload .deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/linux/deb/spLinker_${{ env.SPLINKER_VERSION }}_amd64.deb
          asset_name: spLinker_${{ env.SPLINKER_VERSION }}_amd64.deb
          asset_content_type: application/x-deb

      - name: Upload .msi
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows/spLinker-${{ env.SPLINKER_VERSION }}.msi
          asset_name: spLinker-${{ env.SPLINKER_VERSION }}.msi
          asset_content_type: application/x-msdownload
